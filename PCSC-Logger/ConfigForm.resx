<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AIsAAADsAAAA3wAAAOAAAADWAAAAPQAAAAAAAAAfAAAA3wAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAXAAA
        AN8AAAAfAAAAAAAAABUAAAA+AAAABgAAAAAAAAAVAAAAPQAAAAUAAAACAAAAMwAAAFsAAABcAAAAXAAA
        AC0AAAAAAAAADAAAAEcAAABcAAAAXAAAAFYAAAAVAAAAAAAAAB8AAADfAAAAXAAAAAAAAAAAAAAAAAAA
        AAAAAABcAAAA3wAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAN8AAABcAAAAAAAA
        AAAAAAAAAAAAAAAAAFwAAADfAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAA3wAA
        AFwAAAAAAAAAAAAAAAAAAAAAAAAAXAAAAN8AAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AB8AAADfAAAAXAAAAAAAAAAAAAAAAAAAAAAAAABcAAAA3wAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHwAAAN8AAABcAAAAAAAAAAAAAAAAAAAAAAAAAFwAAADfAAAAHwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAACRAAAAkQAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAfAAAA3wAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAXAAAAN8AAAAfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAMQAAADEAAAAEgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8AAADfAAAAXAAAAAAAAAAAAAAAAAAAAAAAAABcAAAA3wAA
        AB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAB8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAN8AAABcAAAAAAAAAAAAAAAAAAAAAAAA
        AFwAAADfAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDAAAAfwAAABkAAAAAAAAAAAAA
        ABkAAAB/AAAAQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAA3wAAAFwAAAAAAAAAAAAA
        AAAAAAAAAAAAXAAAAN8AAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEYAAADhAAAA0QAA
        AJgAAACYAAAA0QAAAOEAAABGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8AAADfAAAAXAAA
        AAAAAAAAAAAAAAAAAAAAAABcAAAA3wAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAQAAADUAAAAgAAAAAAAA
        ADAAAACLAAAAugAAALoAAACKAAAAMAAAAAAAAAAgAAAANQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAHwAA
        AN8AAABcAAAAAAAAAAAAAAAAAAAAAAAAAFwAAADfAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAqQAA
        AM0AAABBAAAABAAAAAAAAAADAAAAAwAAAAAAAAAEAAAAQQAAAM0AAACpAAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAfAAAA3wAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAXAAAAN8AAAAfAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAqAAAAtgAAAOoAAACmAAAAXwAAAD8AAAA/AAAAXwAAAKYAAADqAAAAtgAAACsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAB8AAADfAAAAXAAAAAAAAAAAAAAAAAAAAAAAAABcAAAA3wAAAB8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAQAAAAYQAAALoAAADhAAAA5wAAAOcAAADhAAAAugAAAGIAAAAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAN8AAABcAAAAAAAAAAAAAAAAAAAAAAAAAF0AAADfAAAAHwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAACIAAAA2AAAANgAAACIAAAAJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAA3wAAAF0AAAAAAAAAAAAAAAAAAAAAAAAAWwAA
        AOAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAADgAAAAWwAAAAAAAAAAAAAAAAAA
        AAAAAABBAAAA6QAAAEsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASwAAAOkAAABBAAAAAAAA
        AAAAAAAAAAAAAAAAAA0AAACuAAAA2AAAAHQAAABbAAAAXAAAAFwAAABcAAAAXAAAAFwAAABcAAAAXAAA
        AFwAAABcAAAAXAAAAFwAAABcAAAAXAAAAFwAAABcAAAAXAAAAFwAAABcAAAAWwAAAHQAAADYAAAArgAA
        AA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAACtAAAA9wAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAA
        AP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA9wAA
        AK4AAAAkAAAAAAAAAAAAAAAA4AAAB8AAAAPH///jx///48f//GPEQfAjxADgI8QAAmPEAAPjxAAD48QA
        4+PEAAAjxEAAI8RAECPH///jx///48f//+PH/n/jx/w/48f8P+PH/n/jx/GP48fwD+PHiBHjx4JB48fA
        A+PH4Afjx/gf48f//+PH///jwAAAA+AAAAc=
</value>
  </data>
</root>